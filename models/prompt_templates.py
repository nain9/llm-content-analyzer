from entities.analysis_data import AnalysisData


class PromptTemplates:
	"""Шаблоны промптов для взаимодействия с моделями."""
	
	@staticmethod
	def comment_response(analysis_data: AnalysisData) -> str:
		return f"""
Ты — представитель аудитории "{analysis_data.audience}" на платформе "{analysis_data.platform}". 
Формат блога: "{analysis_data.blog_type}".
Прочитай пост и сгенерируй реалистичный комментарий в ответ — эмоциональный, но типичный для такой аудитории.

<example>
Платформа: Telegram
Тип блога: СМИ
Аудитория: Население
Пост: 
"Жители Бурятии делятся тревогой из-за густого смога, накрывшего несколько районов республики.
По данным лесоохраны, наиболее серьёзная обстановка складывается в Джидинском и Баунтовском районах — 
здесь огонь вплотную подошёл к населённым пунктам. В борьбе с огнём участвуют сотрудники МЧС, 
военные и сотни добровольцев из числа местных жителей.
Пользователи соцсетей выкладывают видео и фото с плотной дымкой над улицами, полями и автомагистралями. 
Люди жалуются на удушливый запах гари и затруднённое дыхание, в некоторых школах отменили занятия. 
На заправках и у магазинов устанавливают ёмкости с водой — в помощь тем, кто вынужден находиться на открытом воздухе."

Комментарий: 
"Очень страшно за людей, которые сейчас живут в этом аду!
Почему каждый год одно и то же — когда уже начнут реально предотвращать такие пожары, а не только тушить последствия?"
</example>

Теперь сгенерируй комментарий, который написал бы типичный представитель аудитории "{analysis_data.audience}" на платформе "{analysis_data.platform}" в ответ на пост: "{analysis_data.post_text}"
Отвечай строго одним предложением, уложись в 100 токенов и следуй примерам. Ответ начни с "Комментарий: ".
"""

	@staticmethod
	def advanced_audience_reaction(analysis_data: AnalysisData) -> tuple[list, list, list]:
		messages = []
		topics = [
			"Какие эмоции вызывает пост",
			"Какие обсуждения вызовет пост",
			"Какова вовлеченность аудитории",
			"Какие сильные стороны у поста",
			"Какие слабые стороны у поста",
			"Какие рекомендации по улучшению поста"]
		beginnings = [
			"Эмоции:",
			"Обсуждения:",
			"Вовлеченность:",
			"Сильные стороны:",
			"Слабые стороны:",
			"Рекомендации:"]
		
		# Запрос для генерации эмоций от поста
		messages.append(f"""
Ты — эксперт по анализу эмоций аудитории "{analysis_data.audience}" на платформе "{analysis_data.platform}". 
Формат блога: "{analysis_data.blog_type}". Цель автора: "{analysis_data.purpose}".
Оцени, какие эмоции вызывает этот пост, объясни, что триггерит аудиторию.
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Проанализируй эмоции от этого поста: "{analysis_data.post_text}"		
""")
		# Запрос для генерации потенциальных обсуждений в комментариях
		messages.append(f"""
Ты — аналитик, который предсказывает обсуждения в комментариях. 
Определи, какие темы или споры могут возникнуть среди аудитории "{analysis_data.audience}" на платформе "{analysis_data.platform}" после прочтения поста.
Формат блога: "{analysis_data.blog_type}". Цель автора: "{analysis_data.purpose}".
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Какие обсуждения вызовет этот пост: "{analysis_data.post_text}"
""")
		# Запрос для генерации вовлеченности аудитории
		messages.append(f"""
Ты — эксперт по вовлеченности в социальных сетях. 
Проанализируй пост с учетом цели "{analysis_data.purpose}", формата "{analysis_data.blog_type}", платформы "{analysis_data.platform}" и интересов аудитории "{analysis_data.audience}".
Оцени, насколько он вызывает желание комментировать, лайкать или репостить, и объясни почему.		
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Оцени вовлечённость этого поста: "{analysis_data.post_text}"
""")
		# Запрос для генерации сильных сторон поста
		messages.append(f"""
Ты — эксперт по анализу контента. 
Выдели сильные стороны этого поста, исходя из цели "{analysis_data.purpose}", формата блога "{analysis_data.blog_type}" и интересов аудитории "{analysis_data.audience}" на платформе "{analysis_data.platform}".
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Выдели сильные стороны этого поста: "{analysis_data.post_text}"
""")
		# Запрос для генерации слабых сторон поста
		messages.append(f"""
Ты — эксперт по анализу контента. 
Найди слабые стороны поста: что мешает его восприятию, не даёт достичь цели "{analysis_data.purpose}", не соответствует формату "{analysis_data.blog_type}" или аудитории "{analysis_data.audience}" на платформе "{analysis_data.platform}".
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Найди слабые стороны этого поста: "{analysis_data.post_text}"
""")
		# Запрос для генерации рекомендаций по улучшению поста
		messages.append(f"""
Ты — эксперт по улучшению контента для платформы "{analysis_data.platform}". 
Дай 1–2 чёткие рекомендации по улучшению поста, чтобы он стал более эффективным для аудитории "{analysis_data.audience}" и помог достичь цели "{analysis_data.purpose}" в формате блога "{analysis_data.blog_type}".
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Дай рекомендации для этого поста: "{analysis_data.post_text}"
""")
		return messages, topics, beginnings

	@staticmethod
	def dialog_validation_reasoning(new_message: str, messages: list) -> str:
		return f"""
Ты ассистент, который проверяет, логично ли новое сообщение пользователя продолжает текущий диалог.
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
Вот контекст диалога: "{'\n'.join([f"role: {message['role']}\ncontent: {message['content']}" for message in messages])}"
Вот новое сообщение: "{new_message}"
Ты ассистент, который проверяет, логично ли новое сообщение пользователя продолжает текущий диалог.
Давай рассуждать строго шаг за шагом. Длина ответа должна быть строго 500 токенов.
"""
	
	@staticmethod
	def dialog_validation_summary(message: str) -> str:
		return f"""
Ты — ассистент, который резюмирует ответы языковых моделей.
Тебе нужно проанализировать рассуждение.
Если в рассуждении пришли к выводу, что сообщение является продолжением диалога верни: True
В противном случае верни: False

Сообщение: "{message}"

Отвечай строго одним словом: True или False.
"""

	@staticmethod
	def dialog_response(message: str) -> str:
		return f"""
Ты — ассистент, участвующий в экспертном обсуждении анализа поста. 
Твоя задача — кратко, чётко и по существу ответить на следующий вопрос или реплику, сохраняя связность с предыдущим диалогом и контекстом анализа:

"{message}"

Сформулируй ответ объемом строго не больше 500 токенов. Избегай упоминания лишней информации, сосредоточься на сути.
"""
	
	@staticmethod
	def summary_response(response: str, topic: str, beginning: str) -> str:
		return f"""
Ты — ассистент, который резюмирует ответы языковых моделей.
Тебе нужно найти в тексте ответа ключевые моменты по теме "{topic}" и сформулировать их в виде КРАТКОГО резюме.
Используй конкретные примеры и факты, вместо общих фраз.
Длина резюме должна быть строго 1-2 предложения, уложись в 100 токенов.
Свой ответ начни с "{beginning}".

Сделай краткое резюме ответа:
"{response}"

Ты — ассистент, который резюмирует ответы языковых моделей.
Тебе нужно найти в тексте ответа ключевые моменты по теме "{topic}" и сформулировать их в виде КРАТКОГО резюме.
Используй конкретные примеры и факты, вместо общих фраз.
Длина резюме должна быть строго 1-2 предложения, уложись в 100 токенов.
Свой ответ начни с "{beginning}".
"""
	
	@staticmethod
	def audience_reaction(analysis_data: AnalysisData) -> str:
		return f"""
Ты — эксперт по созданию контента для платформы "{analysis_data.platform}",
с глубоким пониманием аудитории "{analysis_data.audience}"
и формата блога "{analysis_data.blog_type}",
который помогает достичь цели "{analysis_data.purpose}".

<example>
Платформа: Telegram
Тип блога: СМИ
Цель: Информирование
Аудитория: Население
Пост:
"Жители Бурятии делятся тревогой из-за густого смога, накрывшего несколько районов республики.
По данным лесоохраны, наиболее серьёзная обстановка складывается в Джидинском и Баунтовском районах —
здесь огонь вплотную подошёл к населённым пунктам. В борьбе с огнём участвуют сотрудники МЧС,
военные и сотни добровольцев из числа местных жителей.
Пользователи соцсетей выкладывают видео и фото с плотной дымкой над улицами, полями и автомагистралями.
Люди жалуются на удушливый запах гари и затруднённое дыхание, в некоторых школах отменили занятия.
На заправках и у магазинов устанавливают ёмкости с водой — в помощь тем, кто вынужден находиться на открытом воздухе."

1. Комментарий:
Очень страшно за людей, которые сейчас живут в этом аду!
Почему каждый год одно и то же — когда уже начнут реально предотвращать такие пожары, а не только тушить последствия?

2. Эмоции:
Пост вызывает тревогу и беспокойство из-за угрозы огня и удушливого смога,
сочувствие к пострадавшим и солидарность с добровольцами,
а также ощущение беспомощности перед стихией
(например, "огонь вплотную подошёл к населённым пунктам", "затруднённое дыхание", "отменили занятия").

3. Обсуждения:
Пост вызовет обсуждения эффективности работы МЧС и властей при тушении пожаров, причин возгораний (природные или человеческий фактор),
влияния смога на здоровье и меры защиты, достаточности поддержки уязвимых групп,
благодарности добровольцам, критики инфраструктуры (отсутствие фильтров в школах и систем раннего обнаружения),
экологических последствий для природы и урожая, а также доверия к официальной информации и сравнений с другими регионами.

4. Вовлеченность:
Пост вызывает средний уровень вовлечённости — жители региона могут комментировать,
делясь личным опытом или задавая вопросы о ситуации (например, о закрытии школ и мерах безопасности),
а лайки ставят те, кто ценит оперативную и полезную информацию о рисках для здоровья и действиях властей.
Эмоциональных триггеров мало, поэтому мотивация к обсуждению умеренная.

5. Сильные стороны:
Пост оперативно информирует о густом смоге в Бурятии, ссылается на официальные источники (лесоохрана, МЧС),
иллюстрирует ситуацию пользовательскими фото и видео, описывает конкретные последствия
(отмена занятий, запах гари, меры предосторожности) и подчёркивает сплочённость местных жителей и добровольцев,
что делает информацию актуальной, достоверной и эмоционально вовлекающей для населения.

6. Слабые стороны:
В посте отсутствует чёткий заголовок и структурирование текста,
не указаны конкретные данные о масштабах происшествия и официальные комментарии,
нет баланса между эмоциями и фактами,
а также не даются рекомендации для читателей — всё это снижает информативность и удобство восприятия для аудитории Telegram.

7. Рекомендации:
Добавьте в пост конкретные советы для жителей (например, как защититься от смога и куда обращаться при недомогании) и
структурируйте текст с помощью коротких абзацев и подзаголовков,
чтобы повысить удобство восприятия информации.
</example>

Теперь, используя такой же формат и ход рассуждений, проанализируй пост.

<context>
Платформа: "{analysis_data.platform}"
Аудитория: "{analysis_data.audience}"
Цель поста: "{analysis_data.purpose}"
Тип блога: "{analysis_data.blog_type}"
Текст поста: "{analysis_data.post_text}"
</context>

Выдай критичный, но полезный анализ, который:
- Учитывает специфику платформы,
- Подходит под интересы и стиль целевой аудитории,
- Помогает усилить конкретный блог.
- Помогает достичь цели поста.

Структура ответа:
1. Комментарий пользователя: Реалистичный отклик от типичного представителя целевой аудитории.
2. Эмоции: Что чувствует читатель и почему (в терминах контекста и подачи).
3. Обсуждения: Какие споры или мысли может вызвать пост.
4. Вовлечённость: Есть ли стимул лайкать/репостить/комментировать — с объяснением.
5. Сильные стороны: Что работает хорошо — с опорой на целевую аудиторию и формат блога.
6. Слабые стороны: Конкретные недочёты — в аргументации, тоне, структуре.
7. Рекомендации:
- Адаптированы под платформу и стиль блога,
- Направлены на устранение выявленных слабых мест,
- Сохраняют релевантность для целевой аудитории.

Важно:
- Если пост не подходит под целевую аудиторию или платформу — скажи это прямо.
- Избегай общих фраз.
- Будь критичен, но конструктивен.
- Отвечай по каждому пункту одним-двумя предложениями, уложись в каждом пункте в 100-150 токенов и следуй примеру.
"""
